from binarysearchtree import BinarySearchTree

print("           *** testing initializer and inserting the first element *** ")
bst0 = BinarySearchTree()
print(f"The height of the tree is {bst0.height}        The size of the tree is {bst0.size} ")
print(bst0.root)
bst0.insert(5)
print(f"The height of the tree is {bst0.height}        The size of the tree is {bst0.size} ")
print(bst0.root.value)

print("           *** testing insert and size and height *** ")
bst = BinarySearchTree(8)
print(f"The height of the tree is {bst.height}        The size of the tree is {bst.size} ")
print(bst.root.value)

bst.insert(15)
print(f"The height of the tree is {bst.height}        The size of the tree is {bst.size} ")
print(bst.root.value)
print(bst.root.right.value)
print(bst.root.left)

bst.insert(7)
print(f"The height of the tree is {bst.height}        The size of the tree is {bst.size} ")
print(bst.root.left.value)
bst.insert(3)
print(f"The height of the tree is {bst.height}        The size of the tree is {bst.size} ")
print(bst.root.left.left.value)
bst.insert(4)
print(f"The height of the tree is {bst.height}        The size of the tree is {bst.size} ")
print(bst.root.left.left.right.value)
bst.insert(18)
print(f"The height of the tree is {bst.height}        The size of the tree is {bst.size} ")
print(bst.root.right.right.value)
bst.insert(12)
print(f"The height of the tree is {bst.height}        The size of the tree is {bst.size} ")
print(bst.root.right.left.value)
print("           ***   Testing the contains method:   ***   ")
print("Whether the tree contains 2? ", bst.contains(2))
print("Whether the tree contains 12? ", bst.contains(12))
print("Whether the tree contains 18? ", bst.contains(18))
print("Whether the tree contains 5? ", bst.contains(5))
print("Whether the tree contains 8? ", bst.contains(8))
print("Whether the tree contains 1? ", bst.contains(1))
